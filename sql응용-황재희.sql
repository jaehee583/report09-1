
-- --------------------------------------------------------------------------------------------------------------------------------
--  								  				영화정보 DB 정의
-- --------------------------------------------------------------------------------------------------------------------------------
DROP DATABASE IF EXISTS 영화정보_DB;
CREATE DATABASE IF NOT EXISTS 영화정보_DB;

-- --------------------------------------------------------------------------------------------------------------------------------
--  								  				영화정보 DB 관리자 설정
-- --------------------------------------------------------------------------------------------------------------------------------
DROP USER IF EXISTS movie@localhost;
CREATE USER IF NOT EXISTS movie@localhost IDENTIFIED WITH mysql_native_password BY 'qwer1234';
GRANT ALL PRIVILEGES ON 영화정보_DB.* TO movie@localhost WITH GRANT OPTION;
-- SHOW DATABASES;
USE 영화정보_DB;


-- --------------------------------------------------------------------------------------------------------------------------------
--  								  				장르테이블 생성
-- --------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE 장르(
	장르코드 VARCHAR(10) NOT NULL,
    장르명 VARCHAR(45) NOT NULL,
    PRIMARY KEY (장르코드)
);
-- DESC 장르;

-- --------------------------------------------------------------------------------------------------------------------------------
--  								  				영화테이블 생성
-- --------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE 영화(
	영화코드 VARCHAR(10),
    제목 VARCHAR(50) NOT NULL,
    제작년도 VARCHAR(20) NOT NULL UNIQUE,
	상영시간 VARCHAR(10)  NOT NULL,
    개봉일자 VARCHAR(20) NOT NULL,
    제작사 VARCHAR(30) NOT NULL UNIQUE,
    배급사 VARCHAR(30) NOT NULL,
    장르코드 VARCHAR(10) NOT NULL,
    PRIMARY KEY (영화코드)
    -- FOREIGN KEY(장르코드) REFERENCES 장르(장르코드)
);
-- DESC 영화;

-- --------------------------------------------------------------------------------------------------------------------------------
--  								  				배우테이블 생성
-- --------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE 배우(
	주민번호 VARCHAR(14) NOT NULL UNIQUE,
    이름 VARCHAR(20) NOT NULL,
    성별 ENUM('남','여') NOT NULL,
	출생일 VARCHAR(20)  NOT NULL,
    출생지 VARCHAR(45) NOT NULL,
    키 VARCHAR(3) NOT NULL,
    몸무게 VARCHAR(3) NOT NULL,
    혈액형 ENUM('A','B','O','AB') NOT NULL,
    PRIMARY KEY (주민번호)
);
-- DESC 배우;

-- --------------------------------------------------------------------------------------------------------------------------------
--  								  				감독테이블 생성
-- --------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE 감독(
	등록번호 VARCHAR(10)NOT NULL UNIQUE,
    이름 VARCHAR(20) NOT NULL,
    성별 ENUM('남','여') NOT NULL,
	출생일 VARCHAR(20)  NOT NULL,
    출생지 VARCHAR(45) NOT NULL,
    학력사항 VARCHAR(20) NOT NULL,
    PRIMARY KEY (등록번호)
);
-- DESC 감독;

-- --------------------------------------------------------------------------------------------------------------------------------
--  								  				영화_has_감독테이블 생성
-- --------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE 영화_has_감독(
	영화코드 VARCHAR(10) NOT NULL UNIQUE,
    등록번호 VARCHAR(10) NOT NULL UNIQUE,
    PRIMARY KEY (영화코드,등록번호),
	FOREIGN KEY(영화코드) REFERENCES 영화(영화코드),
    FOREIGN KEY(등록번호) REFERENCES 감독(등록번호)
);
-- DESC 영화_has_감독;

-- --------------------------------------------------------------------------------------------------------------------------------
--  								  				영화_has_배우테이블 생성
-- --------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE 영화_has_배우(
	영화코드 VARCHAR(10) NOT NULL UNIQUE,
    주민번호 VARCHAR(50) NOT NULL UNIQUE,
    PRIMARY KEY (영화코드,주민번호),
    FOREIGN KEY(영화코드) REFERENCES 영화(영화코드),
    FOREIGN KEY(주민번호) REFERENCES 배우(주민번호)
);
-- DESC 영화_has_배우;



-- --------------------------------------------------------------------------------------------------------------------------------
--  								  				장르 테이블 자료 삽입
-- --------------------------------------------------------------------------------------------------------------------------------
INSERT INTO 장르 VALUES(
	'0001',-- 장르코드
    'romantic comedy'-- 장르명
);
INSERT INTO 장르 VALUES(
	'0002',-- 장르코드
    '액션'-- 장르명
);
INSERT INTO 장르 VALUES(
	'0003',-- 장르코드
    '포르노'-- 장르명
);

-- --------------------------------------------------------------------------------------------------------------------------------
--  								  				영화 테이블 자료 삽입
-- --------------------------------------------------------------------------------------------------------------------------------
INSERT INTO 영화 VALUES(
	'0001',-- 영화코드
    '제목1',-- 제목
    '2008',-- 제작년도
	'180분',-- 상영시간
    '2008-12-01',-- 개봉일자
    '제작사1',-- 제작사
    '배급사1',-- 배급사
    '0001'-- 장르코드
);
INSERT INTO 영화 VALUES(
	'0002',-- 영화코드
    '제목2',-- 제목
    '2010',-- 제작년도
	'180분',-- 상영시간
    '2010-12-01',-- 개봉일자
    '제작사2',-- 제작사
    '배급사2',-- 배급사
    '0001'-- 장르코드
);
INSERT INTO 영화 VALUES(
	'0003',-- 영화코드
    '제목3',-- 제목
    '2011',-- 제작년도
	'180분',-- 상영시간
    '2011-12-01',-- 개봉일자
    '제작사3',-- 제작사
    '배급사3',-- 배급사
    '0002'-- 장르코드
);
INSERT INTO 영화 VALUES(
	'0004',-- 영화코드
    '제목4',-- 제목
    '2014',-- 제작년도
	'180분',-- 상영시간
    '2020-12-01',-- 개봉일자
    '제작사4',-- 제작사
    '배급사4',-- 배급사
    '0003'-- 장르코드
);
INSERT INTO 영화 VALUES(
	'0005',-- 영화코드
    '제목5',-- 제목
    '2015',-- 제작년도
	'180분',-- 상영시간
    '2020-12-01',-- 개봉일자
    '제작사5',-- 제작사
    '배급사5',-- 배급사
    '0002'-- 장르코드
);

-- --------------------------------------------------------------------------------------------------------------------------------
--  								  				배우 테이블 자료 삽입
-- --------------------------------------------------------------------------------------------------------------------------------
INSERT INTO 배우 VALUES(
	'111111-111111',-- 주민번호
    '홍길동',-- 이름
    '남',-- 성별
	'1983-01-01',-- 출생일
    '인천광역시 서구',-- 출생지
    '183',-- 키
    '80',-- 몸무게
    'A'-- 혈액형
);
INSERT INTO 배우 VALUES(
	'211111-111111',-- 주민번호
    '김길동',-- 이름
    '남',-- 성별
	'1983-02-01',-- 출생일
    '경기도 부천시',-- 출생지
    '180',-- 키
    '80',-- 몸무게
    'B'-- 혈액형
);
INSERT INTO 배우 VALUES(
	'311111-111111',-- 주민번호
    '윤길동',-- 이름
    '여',-- 성별
	'1993-01-01',-- 출생일
    '인천광역시 서구',-- 출생지
    '167',-- 키
    '49',-- 몸무게
    'A'-- 혈액형
);
INSERT INTO 배우 VALUES(
	'411111-111111',-- 주민번호
    '정길동',-- 이름
    '남',-- 성별
	'1989-01-01',-- 출생일
    '인천광역시 서구',-- 출생지
    '187',-- 키
    '83',-- 몸무게
    'AB'-- 혈액형
);
INSERT INTO 배우 VALUES(
	'511111-111111',-- 주민번호
    '오길동',-- 이름
    '여',-- 성별
	'1983-01-01',-- 출생일
    '서울시 중구',-- 출생지
    '160',-- 키
    '45',-- 몸무게
    'O'-- 혈액형
);

-- --------------------------------------------------------------------------------------------------------------------------------
--  								  				감독 테이블 자료 삽입
-- --------------------------------------------------------------------------------------------------------------------------------
INSERT INTO 감독 VALUES(
	'0001',-- 등록번호
	'이감독',-- 이름
    '남',-- 성별
	'1973-01-01',-- 출생일
    '인천광역시 서구',-- 출생지
    '학사'-- 학력사항
);
INSERT INTO 감독 VALUES(
	'0002',-- 등록번호
	'홍감독',-- 이름
    '남',-- 성별
	'1972-01-01',-- 출생일
    '인천광역시 연수구',-- 출생지
    '석사'-- 학력사항
);
INSERT INTO 감독 VALUES(
	'0003',-- 등록번호
	'박감독',-- 이름
    '남',-- 성별
	'1974-01-01',-- 출생일
    '인천광역시 서구',-- 출생지
    '학사'-- 학력사항
);
INSERT INTO 감독 VALUES(
	'0004',-- 등록번호
	'오감독',-- 이름
    '남',-- 성별
	'1979-01-01',-- 출생일
    '인천광역시 서구',-- 출생지
    '학사'-- 학력사항
);
INSERT INTO 감독 VALUES(
	'0005',-- 등록번호
	'이감독',-- 이름
    '남',-- 성별
	'1980-01-01',-- 출생일
    '서울시 종로구',-- 출생지
    '석사'-- 학력사항
);

-- --------------------------------------------------------------------------------------------------------------------------------
--  								  				영화_has_감독 테이블 자료 삽입
-- --------------------------------------------------------------------------------------------------------------------------------
INSERT INTO 영화_has_감독 VALUES(
	'0001',-- 영화코드
    '0001'-- 등록번호
);
INSERT INTO 영화_has_감독 VALUES(
	'0002',-- 영화코드
    '0002'-- 등록번호
);
INSERT INTO 영화_has_감독 VALUES(
	'0003',-- 영화코드
    '0003'-- 등록번호
);
INSERT INTO 영화_has_감독 VALUES(
	'0004',-- 영화코드
    '0004'-- 등록번호
);
INSERT INTO 영화_has_감독 VALUES(
	'0005',-- 영화코드
    '0005'-- 등록번호
);

-- --------------------------------------------------------------------------------------------------------------------------------
--  								  				영화_has_배우 테이블 자료 삽입
-- --------------------------------------------------------------------------------------------------------------------------------
INSERT INTO 영화_has_배우 VALUES(
	'0001',-- 영화코드
    '111111-111111'-- 주민번호
);
INSERT INTO 영화_has_배우 VALUES(
	'0002',-- 영화코드
    '211111-111111'-- 주민번호
);
INSERT INTO 영화_has_배우 VALUES(
	'0004',-- 영화코드
    '411111-111111'-- 주민번호
);
INSERT INTO 영화_has_배우 VALUES(
	'0005',-- 영화코드
    '511111-111111'-- 주민번호
);

select * from 장르;
select * from 영화;
select * from 배우;
select * from 감독;
select * from 영화_has_감독;
select * from 영화_has_배우;

-- 2020년에 제작된 장르별 영화의 편수를 구하시오
select 장르코드,CONCAT(COUNT(*),'편') AS 제작편수
from 영화
where 개봉일자='2020-12-01'
group by 장르코드;

-- romantic comedy에 출연하지 않은 배우목록을 출력하시오
-- select 배우.이름 배우목록
-- from 배우;

-- 장르명이 romantic comedy인 자료의 장르코드와 장르명을 각각 '000111','로맨틱 코미디'로 변경하시오
UPDATE 장르 SET 장르코드='000111' WHERE 장르명='romantic comedy';
UPDATE 장르 SET 장르명='로맨틱 코미디' WHERE 장르명='romantic comedy';

SELECT * FROM 장르;

-- 장르가 포르노에 해당하는 영화는 불법이므로 해당 영화에 대한 모든 정보를 삭제하시오
SET FOREIGN_KEY_CHECKS=0;
delete from 영화
where 장르코드='0003';
SELECT * FROM 영화;

